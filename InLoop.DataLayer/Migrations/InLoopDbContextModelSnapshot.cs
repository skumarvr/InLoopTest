// <auto-generated />
using System;
using InLoop.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InLoop.DataLayer.Migrations
{
    [DbContext(typeof(InLoopDbContext))]
    partial class InLoopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("InLoop.DataLayer.Models.Enrollment", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("InLoop.DataLayer.Models.Lecture", b =>
                {
                    b.Property<int>("LectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("LectureId");

                    b.ToTable("Lecture");
                });

            modelBuilder.Entity("InLoop.DataLayer.Models.LectureSchedule", b =>
                {
                    b.Property<int>("LectureScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayOfTheWeek")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Endtime")
                        .HasColumnType("TEXT");

                    b.Property<int>("LeatureId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeatureTheatreId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LectureId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LectureTheatreId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LectureScheduleId");

                    b.HasIndex("LectureId");

                    b.HasIndex("LectureTheatreId");

                    b.HasIndex("SubjectId");

                    b.ToTable("LectureSchedule");
                });

            modelBuilder.Entity("InLoop.DataLayer.Models.LectureTheatre", b =>
                {
                    b.Property<int>("LectureTheatreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("LectureTheatreId");

                    b.ToTable("LectureTheatre");
                });

            modelBuilder.Entity("InLoop.DataLayer.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("InLoop.DataLayer.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("SubjectId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("InLoop.DataLayer.Models.Enrollment", b =>
                {
                    b.HasOne("InLoop.DataLayer.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InLoop.DataLayer.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("InLoop.DataLayer.Models.LectureSchedule", b =>
                {
                    b.HasOne("InLoop.DataLayer.Models.Lecture", "Lecture")
                        .WithMany("LectureSchedules")
                        .HasForeignKey("LectureId");

                    b.HasOne("InLoop.DataLayer.Models.LectureTheatre", "LectureTheatre")
                        .WithMany("LectureSchedules")
                        .HasForeignKey("LectureTheatreId");

                    b.HasOne("InLoop.DataLayer.Models.Subject", "Subject")
                        .WithMany("LectureSchedules")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("LectureTheatre");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("InLoop.DataLayer.Models.Lecture", b =>
                {
                    b.Navigation("LectureSchedules");
                });

            modelBuilder.Entity("InLoop.DataLayer.Models.LectureTheatre", b =>
                {
                    b.Navigation("LectureSchedules");
                });

            modelBuilder.Entity("InLoop.DataLayer.Models.Subject", b =>
                {
                    b.Navigation("LectureSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
